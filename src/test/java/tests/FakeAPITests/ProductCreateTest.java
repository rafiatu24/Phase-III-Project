package tests.FakeAPITests;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;

public class ProductCreateTest {

    private final String BASE_URI = "https://fakestoreapi.com";

    @BeforeClass
    public void setup() {
        RestAssured.baseURI = BASE_URI;
    }

    /**
     * Test case for creating a new product using a POST request.
     * It sends a JSON request body and asserts:
     * - Response status code is 200 OK.
     * - Response 'Content-Type' header is 'application/json; charset=utf-8'.
     * - The 'title' in the response matches the one sent.
     * - An 'id' is present and not null in the response.
     *
     * Note: The Fake Store API is a mock API. Product IDs generated by POST requests
     * are temporary and are not persisted across different test runs or separate requests.
     */
    @Test
    public void testCreateProduct() {
        String requestBody = """
            {
              "title": "New Product by RestAssured",
              "price": 125.50,
              "description": "A brand new product created during test execution.",
              "image": "https://i.pravatar.cc",
              "category": "fashion"
            }
            """;

        Response response = given()
                .contentType(ContentType.JSON) // Set content type to JSON
                .body(requestBody)            // Attach the request body
                .when()
                .post("/products")            // Send POST request to /products endpoint
                .then()
                .statusCode(200)              // Assert that the status code is 200
                .header("Content-Type", equalTo("application/json; charset=utf-8")) // Validate Content-Type header
                .body("title", equalTo("New Product by RestAssured")) // Assert the title in the response
                .body("id", notNullValue())   // Assert that an 'id' is present and not null
                .extract().response();        // Extract the full response

        int createdProductId = response.path("id");
        System.out.println("Created Product ID (temporary): " + createdProductId);
    }
}